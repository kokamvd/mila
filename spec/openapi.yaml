openapi: 3.0.0
info:
  title: MilaLevchuk
  version: 0.4.0
  contact:
    name: API Support
    email: kokamvd@gmail.com
  description: |
    API организовано по принципам REST. Контент передается в формате JSON. Частота запросов не дложна превышать 10 в секунду.

    # Версионность

    Версионность API придерживается спецификации [Semantic Versioning 2](https://semver.org)
  x-logo:
    url: './milalogo.png'
    altText: MilaLevchuk
servers:
  - url: 'https://milalevchuk.ru/rest'
    description: Prodaction
#x-tagGroups:
#  - name: General
#    tags:
#      - pet
#      - store
#  - name: User Management
#    tags:
#      - user
#  - name: Models
#    tags:
#      - pet_model
#      - store_model
paths:
  /pays:
    get:
      security:
        - SecretApiKey: []
      summary: Получить список платежей
      description: |
        Возвращает список платежей. Все параметры запроса не обязательны.

        Ограничить выборку можно с помощью параметров `limit` и `start`.

        Фильтрация доступна по всем полям, кроме `roistat_visit`. Одновременно в фильтре участвует одно поле.
        Формат даты `2019-09-06T00:58:34`, все даты в часовом поясе Москвы UTC+3:00.

        Для фильтрации задаются три параметра, например, `filter=updatedon&filterType=gt&filterValue=2019-09-06T00:55:00`
        Если `filterType` принимает `null` или `notnull`, `filterValue` задавать нет необходимости.
        Допустимые значения и эквивалентные операторы:

        ```
        'eq' = '=',
        'ne' = '!=',
        'gt' = '>',
        'ge' = '>=',
        'lt' = '<',
        'le' = '<=',
        'null' = 'IS NULL',
        'notnull' = 'IS NOT NULL'
        ```
      tags:
        - Платежи
      parameters:
        - schema:
            type: integer
            default: 100
            minimum: 1
          in: query
          name: limit
          description: Ограничение количества возвращаемых записей
        - schema:
            type: integer
          in: query
          name: start
          description: Стартовая запись (смещение) для выборки
        - schema:
            type: string
            default: id
          in: query
          name: sort
          description: Поле для сортировки
        - schema:
            type: string
            default: DESC
            enum:
              - DESC
              - ASC
          in: query
          name: dir
          description: Направление сортировки
        - schema:
            type: string
          in: query
          name: filter
          description: Поле для фильтрации
        - schema:
            type: string
            enum:
              - eq
              - ne
              - gt
              - ge
              - lt
              - le
              - 'null'
              - notnull
            default: gt
          in: query
          name: filterType
          description: Оператор фильтра
        - schema:
            type: string
          in: query
          name: filterValue
          description: Операнд фильтра
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pay'
                  total:
                    type: integer
                    description: 'Общее количество платежей, удовлетворяющих условиям фильтрации и поиска'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  object:
                    type: object
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: object
              example:
                message: Something wrong
                object: []
                success: false
                errors:
                  filterType: Wrong filter operator
  /paystatuses:
    get:
      security:
        - SecretApiKey: []
      summary: Получить список статусов платежей
      description: Возвращает список всех возможных статусов платежа
      tags:
        - Платежи
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: object
                    additionalProperties:
                      type: string
                  total:
                    type: string
                    description: 'Общее количество статусов'
              example:
                results:
                  '0': 'Не оплачен'
                  '1': 'Оплачен'
                  '2': 'На подтверждении'
                  '-1': 'Возврат'
                  '-2': 'Отказ'
                  '-3': 'Ожидание возврата'
                total: 6
  /payfields:
    get:
      security:
        - SecretApiKey: []
      summary: Получить список полей платежа
      description: Возвращает список полей платежа
      tags:
        - Платежи
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: object
                    additionalProperties:
                      type: string
                  total:
                    type: integer
                    description: 'Общее количество полей'
              example:
                results:
                   1: id
                   2: name
                   3: email
                   4: phone
                   5: cost
                   6: received
                   7: success
                   8: credit
                   9: linked
                   10: createdon
                   11: createdby
                   12: confirmedon
                   13: formId
                   14: updatedon
                   15: roistat_visit
                total: 15
  /roistat?action=import_scheme:
    get:
      security:
        - UserToken: []
      summary: Выгрузка информации о статусах и дополнительных полях
      description: Этот запрос нужно настроить до этапа “Отправка данных в CRM-систему”, так как он необходим для корректной работы всей интеграции
      tags:
        - Roistat
      parameters:
        - name: action
          schema:
            type: string
            enum:
             - import_scheme
          required: true
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                  fields:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
              example:
                statuses:
                  - id: 0
                    name: 'Не оплачен'
                  - id: 1
                    name: 'Оплачен'
                  - id: 2
                    name: 'На подтверждении'
                  - id: -1
                    name: 'Возврат'
                  - id: -2
                    name: 'Отказ'
                  - id: -3
                    name: 'Ожидание возврата'
                fields:
                  - id: 1
                    name: 'Email'
                  - id: 2
                    name: 'Телефон'
                  - id: 3
                    name: 'Получено денег'
                  - id: 4
                    name: 'Рассрочка'
                  - id: 5
                    name: 'Связь'
                  - id: 6
                    name: 'Дата оплаты'
                  - id: 7
                    name: 'Платежная форма'
  /roistat?action=export:
    get:
      security:
        - UserToken: []
      summary: Выгрузка информации о платежах
      description: Список платежей и параметры пагинации выборки. Даты в часовом поясе UTC+0
      tags:
        - Roistat
      parameters:
        - name: action
          schema:
            type: string
            enum:
              - export
          required: true
          in: query
        - name: date
          schema:
            type: integer
          in: query
          description: дата в формате UNIX-time, после которой были изменения в сделках
        - name: limit
          schema:
            type: integer
            default: 100
          in: query
          description: количество выгружаемых сделок
        - name: offset
          schema:
            type: integer
            default: 0
          in: query
          description: количество заявок от начала выборки, которые нужно пропустить
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        date_create:
                          type: integer
                          description: Дата создания сделки в формате UNIX-time в часовом поясе UTC+0
                        status:
                          type: integer
                          description: Уникальный идентификатор статуса из массива statuses
                        price:
                          type: number
                        roistat:
                          type: string
                          description: Номер визита, сохраненный у сделки. Значение cookie roistat_visit. Используется для определения источника сделки
                        client_id:
                          type: integer
                          description: идентификатор пользователя
                        fields:
                          type: object
                          description: Массив дополнительных полей сделки
                          additionalProperties:
                            type: string
                  pagination:
                    type: object
                    description: устанавливает лимит выгрузки заявок за один запрос
                    properties:
                      total_count:
                        type: integer
                        description: Количество заявок, которые были изменены после заданной даты
                      limit:
                        type: integer
                        description: Количествово заявок, которое будет выгружаться за один запрос
              example:
                orders:
                  id: 873324
                  name: "Катя"
                  date_create: 1569863221
                  status: 0
                  price: 249
                  roistat: "481588"
                  client_id: 92655
                  fields:
                    "1": "katja.n@bk.ru"
                    "2": ""
                    "3": null
                    "4": null
                    "5": null
                    "6": null
                    "7": "marathon2"
                pagination:
                  total_count: 154
                  limit: 10
  /roistat?action=export_clients:
    get:
      security:
        - UserToken: []
      summary: Выгрузка информации о клиентах
      description: Список пользователей и параметры пагинации выборки. Даты в часовом поясе UTC+0
      tags:
        - Roistat
      parameters:
        - name: action
          schema:
            type: string
            enum:
              - export_clients
          required: true
          in: query
        - name: date
          schema:
            type: integer
          in: query
          description: дата в формате UNIX-time, после которой были созданы пользователи
        - name: limit
          schema:
            type: integer
            default: 100
          in: query
          description: количество выгружаемых пользователей
        - name: offset
          schema:
            type: integer
            default: 0
          in: query
          description: количество пользователей от начала выборки, которые нужно пропустить
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  clients:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        phone:
                          type: string
                        email:
                          type: string
                        birth_date:
                          type: string
                          description: День рождения (В формате Y-m-d)
                  pagination:
                    type: object
                    description: устанавливает лимит выгрузки пользователей за один запрос
                    properties:
                      total_count:
                        type: integer
                        description: Количество пользователей, которые были созданы после заданной даты
                      limit:
                        type: integer
                        description: Количествово пользователей, которое будет выгружаться за один запрос
              example:
                clients:
                  - id: 249310
                    name: "baasdfuldfa996@gmail.com"
                    phone: ""
                    email: "baasdfuldfa996@gmail.com"
                    birth_date: ""
                  - id: 249308
                    name: "kubsdddde@mail.ru"
                    phone: "89331440697"
                    email: "kubsdddde@mail.ru"
                    birth_date: "1977-09-08"
                pagination:
                  total_count: 35
                  limit: 10